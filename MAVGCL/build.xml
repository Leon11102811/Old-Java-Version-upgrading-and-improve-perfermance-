<project name="MAVGAnalysis" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant" xmlns:ivy="antlib:org.apache.ivy.ant" default="build">


	<!-- Works at least on OSX, to determine JDK -->

	<script language="javascript">
	  arr = project.getProperty('java.home').split('jre');
	  project.setProperty('jdk.home', arr[0]);
    </script>

	<taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home}lib/ant-javafx.jar" />

	<target name="all" depends="clean,compile,build" />
	<target name="all_deploy" depends="clean,compile,build,deploy_osx" />

	<target name="clean">
		<delete dir="dist" />
		<mkdir dir="dist" />
		<delete dir="bin" />
		<mkdir dir="bin" />
	</target>

	<property name="ivy.install.version" value="2.1.0-rc2" />
	<condition property="ivy.home" value="${env.IVY_HOME}">
		<isset property="env.IVY_HOME" />
	</condition>
	<property name="ivy.home" value="${user.home}/.ant" />
	<property name="ivy.jar.dir" value="${ivy.home}/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">

	<mkdir dir="${ivy.jar.dir}"/>
	<!-- download Ivy from web site so that it can be used even without any special installation -->
	<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
	     dest="${ivy.jar.file}" usetimestamp="true"/>
	</target>

	<target name="init-ivy" depends="download-ivy">
	<!-- try to load ivy here from ivy home, in case the user has not already dropped
	      it into ant's lib dir (note that the latter copy will always take precedence).
	      We will not fail as long as local lib dir exists (it may be empty) and
	      ivy is in at least one of ant's lib dir or the local lib dir. -->
	<path id="ivy.lib.path">
	    <fileset dir="${ivy.jar.dir}" includes="*.jar"/>

	</path>
	<taskdef resource="org/apache/ivy/ant/antlib.xml"
		 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
	</target>

    	<target name="resolve" depends="init-ivy" description="--> retrieve dependencies with ivy">
        	<ivy:retrieve />
    	</target>

	<target name="metadata" depends="clean">
		<get src="https://s3.amazonaws.com/px4-travis/Firmware/master/parameters.xml"
					dest="src/com/comino/flight/parameter/PX4ParameterFactMetaData.xml"/>
	</target>

	<target name="compile" depends="metadata,resolve">
		<copy todir="bin">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<copy todir="bin">
			<fileset dir="lib">
				<include name="*.so" />
				<include name="*.jnilib" />
			</fileset>
		</copy>
		<javac destdir="bin" includeantruntime="false">
			<src path="src" />
			<classpath>
				<fileset dir="lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="build" depends="compile">
		<fx:jar destfile="dist/MAVGAnalysis.jar">
			<fx:application mainClass="com.comino.flight.MainApp"/>
			<fileset dir="bin/">
				<include name="**" />
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="com.comino.flight.MainApp" />
				<attribute name="Class-Path" value="gson-2.4.jar JCSG-0.1.7.jar jfxchartext-1.1.jar jinput-2.0.5.jar jinput-platform-2.0.5-natives-osx.jar jna-4.1.0.jar jssc-2.8.0.jar jutils-1.0.0.jar lucene-core-4.7.0.jar mavcomm.jar Medusa-4.7.jar slf4j-api-1.6.1.jar slf4j-simple-1.6.1.jar vecmath-1.3.1.jar" />
			</manifest>
		</fx:jar>
		<copy todir="dist">
			<fileset dir="lib/">
				<include name="gson-2.4.jar" />
				<include name="JCSG-0.1.7.jar" />
				<include name="jfxchartext-1.1.jar" />
				<include name="jinput-2.0.5.jar" />
				<include name="jinput-platform-*.jar" />
				<include name="jna-4.1.0.jar" />
				<include name="jssc-2.8.0.jar" />
				<include name="jutils-1.0.0.jar" />
				<include name="lucene-core-4.7.0.jar" />
				<include name="mavcomm.jar" />
				<include name="Medusa-4.7.jar" />
				<include name="slf4j-api-1.6.1.jar" />
				<include name="slf4j-simple-1.6.1.jar" />
				<include name="vecmath-1.3.1.jar" />
			</fileset>
		</copy>

	</target>

	<target name="deploy_osx" depends="build">
		<fx:deploy width="1230" height="865" outdir="dist/deploy" outfile="MAVGAnalysis" nativeBundles="dmg">
			<fx:info title="MAVGAnalysiss" />
			<fx:application name="MAVGAnalysis" mainClass="com.comino.flight.MainApp" version="0.3">
			</fx:application>
			<fx:resources>
				<fx:fileset dir="dist" includes="*.*" />
			</fx:resources>
			<fx:info title="MAVGAnalysis" vendor="ecmnet">
				<fx:icon href="MAVGAnalysis.icns" />
			</fx:info>
		</fx:deploy>
	</target>

	<target name="deploy_linux" depends="build">
		<fx:deploy width="1230" height="865" outdir="dist/deploy" outfile="MAVGAnalysis" nativeBundles="deb">
			<fx:info title="MAVGAnalysiss" />
			<fx:application name="MAVGAnalysis" mainClass="com.comino.flight.MainApp" version="0.3">
			</fx:application>
			<fx:resources>
				<fx:fileset dir="dist" includes="*.*" />
			</fx:resources>
			<fx:info title="MAVGAnalysis" vendor="ecmnet">

			</fx:info>
		</fx:deploy>
	</target>


	<target name="deploy_windows" depends="build">
		<fx:deploy width="1230" height="865" outdir="dist/deploy" outfile="MAVGAnalysis" nativeBundles="all">
			<fx:info title="MAVGAnalysiss" />
			<fx:application name="MAVGAnalysis" mainClass="com.comino.flight.MainApp" version="0.3">
			</fx:application>
			<fx:resources>
				<fx:fileset dir="dist" includes="*.*" />
			</fx:resources>
			<fx:info title="MAVGAnalysis" vendor="ecmnet">

			</fx:info>
		</fx:deploy>
	</target>

</project>
